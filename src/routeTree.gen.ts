/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as AuthImport } from './app/_auth'
import { Route as AppImport } from './app/_app'
import { Route as AuthRegisterImport } from './app/_auth/register'
import { Route as AuthLoginImport } from './app/_auth/login'
import { Route as AppSearchIndexImport } from './app/_app/search/index'
import { Route as AppReelsIndexImport } from './app/_app/reels/index'
import { Route as AppProfileIndexImport } from './app/_app/profile/index'
import { Route as ApphomeIndexImport } from './app/_app/(home)/index'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppSearchIndexRoute = AppSearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => AppRoute,
} as any)

const AppReelsIndexRoute = AppReelsIndexImport.update({
  id: '/reels/',
  path: '/reels/',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileIndexRoute = AppProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AppRoute,
} as any)

const ApphomeIndexRoute = ApphomeIndexImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_app/(home)/': {
      id: '/_app/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ApphomeIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/profile/': {
      id: '/_app/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/reels/': {
      id: '/_app/reels/'
      path: '/reels'
      fullPath: '/reels'
      preLoaderRoute: typeof AppReelsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/search/': {
      id: '/_app/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AppSearchIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  ApphomeIndexRoute: typeof ApphomeIndexRoute
  AppProfileIndexRoute: typeof AppProfileIndexRoute
  AppReelsIndexRoute: typeof AppReelsIndexRoute
  AppSearchIndexRoute: typeof AppSearchIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  ApphomeIndexRoute: ApphomeIndexRoute,
  AppProfileIndexRoute: AppProfileIndexRoute,
  AppReelsIndexRoute: AppReelsIndexRoute,
  AppSearchIndexRoute: AppSearchIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof ApphomeIndexRoute
  '/profile': typeof AppProfileIndexRoute
  '/reels': typeof AppReelsIndexRoute
  '/search': typeof AppSearchIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof ApphomeIndexRoute
  '/profile': typeof AppProfileIndexRoute
  '/reels': typeof AppReelsIndexRoute
  '/search': typeof AppSearchIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_app/(home)/': typeof ApphomeIndexRoute
  '/_app/profile/': typeof AppProfileIndexRoute
  '/_app/reels/': typeof AppReelsIndexRoute
  '/_app/search/': typeof AppSearchIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/'
    | '/profile'
    | '/reels'
    | '/search'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/register' | '/' | '/profile' | '/reels' | '/search'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_auth/login'
    | '/_auth/register'
    | '/_app/(home)/'
    | '/_app/profile/'
    | '/_app/reels/'
    | '/_app/search/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/(home)/",
        "/_app/profile/",
        "/_app/reels/",
        "/_app/search/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_app/(home)/": {
      "filePath": "_app/(home)/index.tsx",
      "parent": "/_app"
    },
    "/_app/profile/": {
      "filePath": "_app/profile/index.tsx",
      "parent": "/_app"
    },
    "/_app/reels/": {
      "filePath": "_app/reels/index.tsx",
      "parent": "/_app"
    },
    "/_app/search/": {
      "filePath": "_app/search/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
